{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["//Конфигурация пользователя\r\n\r\nconst config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-28\",\r\n  headers: {\r\n    authorization: \"53792d1e-cc96-464f-86a5-37d31002d919\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n//Проверка ответа сервера и преобразование из json\r\n\r\nfunction getResponseData(res) {\r\n  if (!res.ok) {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  return res.json();\r\n}\r\n\r\n//Получение объекта с данными пользователя\r\n\r\nexport const getProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n//Получение массива карточек\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n//Редактирование профиля\r\n\r\nexport const changeNameJob = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me `, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${name}`,\r\n      about: `${about}`,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Добавление новой карточки\r\n\r\nexport const postNewCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${name}`,\r\n      link: `${link}`,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Удаление карточки\r\n\r\nexport const deleteCardApi = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Добавление лайка\r\n\r\nexport const likeCardApi = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Удаление лайка\r\n\r\nexport const deleteLike = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n//Смена Аватара\r\n\r\nexport const changeAvatarPatch = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: `${avatar}`,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n};\r\n","export { createCard, deleteCard, likeCard };\r\nimport { likeCardApi, deleteLike } from \"./api.js\";\r\n\r\n// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\n\r\nfunction createCard(\r\n  cardData,\r\n  idProfile,\r\n  functionCard,\r\n  handleClickDelete\r\n) {\r\n  const newCard = cardTemplate.querySelector(\".card\").cloneNode(true),\r\n    cardImage = newCard.querySelector(\".card__image\"),\r\n    cardDeleteButton = newCard.querySelector(\".card__delete-button\"),\r\n    cardLikeButton = newCard.querySelector(\".card__like-button\"),\r\n    likeCount = newCard.querySelector(\".card__like-count\"),\r\n    idCard = cardData._id;\r\n\r\n  newCard.querySelector(\".card__title\").textContent = cardData.name;\r\n  likeCount.textContent = cardData.likes.length;\r\n  cardImage.alt = cardData.name;\r\n  cardImage.src = cardData.link;\r\n\r\n  if (cardData.owner._id == idProfile) {\r\n    cardDeleteButton.addEventListener(\"click\", () => {\r\n      handleClickDelete(idCard, newCard);\r\n    });\r\n  } else {\r\n    cardDeleteButton.remove();\r\n  }\r\n\r\n  cardData.likes.forEach((element) => {\r\n    if (element._id == idProfile) {\r\n      cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n    }\r\n  });\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    functionCard.openCard(cardData.link, cardData.name);\r\n  });\r\n\r\n  cardLikeButton.addEventListener(\"click\", () => {\r\n    functionCard.likeCard(event, idCard, likeCount);\r\n  });\r\n\r\n  return newCard;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\n\r\nconst deleteCard = (card) => {\r\n  card.remove();\r\n};\r\n\r\n// @todo: Функция лайка карточки\r\n\r\nconst likeCard = (event, idCard, likeCount) => {\r\n  const target = event.target;\r\n\r\n  if (target.classList.contains(\"card__like-button_is-active\")) {\r\n    deleteLike(idCard)\r\n      .then((data) => {\r\n        likeCount.textContent = data.likes.length;\r\n        event.target.classList.remove(\"card__like-button_is-active\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Лайк не удален\");\r\n      });\r\n  } else {\r\n    likeCardApi(idCard)\r\n      .then((data) => {\r\n        likeCount.textContent = data.likes.length;\r\n        event.target.classList.add(\"card__like-button_is-active\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Лайк не поставлен\");\r\n      });\r\n  }\r\n};\r\n","export { openModal, closeModal };\r\n\r\n// @todo: Функция открытия модального окна\r\nconst openModal = (elem) => {\r\n  elem.classList.add(\"popup_is-opened\");\r\n\r\n  // обработчик события нажатия Esc\r\n  document.addEventListener(\"keydown\", closeEsc);\r\n};\r\n\r\n// @todo: Функция закрытия модального окна\r\nconst closeModal = (elem) => {\r\n  elem.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeEsc);\r\n};\r\n\r\n// @todo: Функция закрытия модального Esc\r\nfunction closeEsc(event) {\r\n  if (event.key === \"Escape\") {\r\n    const openModal = document.querySelector(\".popup_is-opened\");\r\n    closeModal(openModal);\r\n  }\r\n}\r\n","export { enableValidation, clearValidation };\r\n\r\n// enableValidation({\r\n//   formSelector: '.popup__form',\r\n//   inputSelector: '.popup__input',\r\n//   submitButtonSelector: '.popup__button',\r\n//   inactiveButtonClass: 'popup__button_disabled',\r\n//   inputErrorClass: 'popup__input_type_error',\r\n//   errorClass: 'popup__error_visible' ,\r\n// });\r\n\r\n//Показать ошибку ввода\r\nconst showInputError = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(`${errorClass}_active`);\r\n};\r\n\r\n//Скрыть ошибку ввода\r\n\r\nconst hideInputError = (\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(inputErrorClass);\r\n  errorElement.classList.remove(`.${errorClass}_active`);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n//Изменение кнопки в зависимости валидности\r\n\r\nconst toggleButtonState = (inputList, buttonElement) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\n//Проверка на валидность нескольких полей\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n//Проверка на валидность  полей\r\n\r\nconst checkInputValidity = (\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.dataset.errorPattern,\r\n      inputErrorClass,\r\n      errorClass\r\n    );\r\n  } else if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      inputErrorClass,\r\n      errorClass\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, inputErrorClass, errorClass);\r\n  }\r\n};\r\n\r\nfunction enableValidation(obj) {\r\n  //Установка прослушивателей событий\r\n  const setEventListeners = (formElement) => {\r\n    const inputList = Array.from(\r\n      formElement.querySelectorAll(obj.inputSelector)\r\n    );\r\n\r\n    const buttonElement = formElement.querySelector(obj.submitButtonSelector);\r\n\r\n    toggleButtonState(inputList, buttonElement);\r\n\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener(\"input\", function () {\r\n        checkInputValidity(\r\n          formElement,\r\n          inputElement,\r\n          obj.inputErrorClass,\r\n          obj.errorClass\r\n        );\r\n        toggleButtonState(inputList, buttonElement);\r\n      });\r\n    });\r\n  };\r\n\r\n  const formList = Array.from(document.querySelectorAll(obj.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement);\r\n  });\r\n}\r\n\r\n// очистка ошибок валидации вызовом clearValidation\r\n\r\nfunction clearValidation(formElement, obj) {\r\n  const inputList = Array.from(formElement.querySelectorAll(obj.inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(\r\n      formElement,\r\n      inputElement,\r\n      obj.inputErrorClass,\r\n      obj.errorClass\r\n    );\r\n  });\r\n  const buttonElement = formElement.querySelector(obj.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement);\r\n}\r\n","import \"./index.css\";\r\nimport { createCard, deleteCard, likeCard } from \"./components/card.js\";\r\nimport { openModal, closeModal } from \"./components/modal.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  getProfile,\r\n  getInitialCards,\r\n  changeNameJob,\r\n  postNewCard,\r\n  changeAvatarPatch,\r\n  deleteCardApi,\r\n} from \"./components/api.js\";\r\n\r\nlet idProfile;\r\n\r\n//Конфигурция валидации\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n// включение валидации вызовом enableValidation\r\n\r\nenableValidation(validationConfig);\r\n\r\n// @todo: DOM узлы\r\nconst content = document.querySelector(\".page\"),\r\n  cardContainer = content.querySelector(\".places__list\"),\r\n  forms = document.forms,\r\n  popupImage = content.querySelector(\".popup_type_image\"),\r\n  imagePopup = popupImage.querySelector(\".popup__image\"),\r\n  imageCaption = popupImage.querySelector(\".popup__caption\"),\r\n  changeAvatarPopup = content.querySelector(\".popup_type_change-avatar\"),\r\n  editProfilePopup = content.querySelector(\".popup_type_edit\"),\r\n  profileTitle = content.querySelector(\".profile__title\"),\r\n  profileImage = content.querySelector(\".profile__image\"),\r\n  profileDescription = content.querySelector(\".profile__description\"),\r\n  formChangeAvatar = forms[\"change-avatar\"],\r\n  changeAvatarUrl = formChangeAvatar.querySelector(\r\n    \".popup__input_type_avatar_url\"\r\n  ),\r\n  formChangeAvatarButton = formChangeAvatar.querySelector(\".popup__button\"),\r\n  profilEditButton = content.querySelector(\".profile__edit-button\"),\r\n  formEditProfile = forms[\"edit-profile\"],\r\n  nameInput = formEditProfile.querySelector(\".popup__input_type_name\"),\r\n  jobInput = formEditProfile.querySelector(\".popup__input_type_description\"),\r\n  formEditProfileButton = formEditProfile.querySelector(\".popup__button\"),\r\n  popupDeleteCard = content.querySelector(\".popup_type_delete-card\");\r\n\r\n// @todo: Функция открытия изображения карточки\r\nconst openCard = (cardLink, cardCaption) => {\r\n  imagePopup.src = cardLink;\r\n  imagePopup.alt = cardCaption;\r\n  imageCaption.textContent = cardCaption;\r\n  openModal(popupImage);\r\n};\r\n\r\n// @todo: Функция загрузки профиля\r\n\r\nfunction renderProfile(obj) {\r\n  profileTitle.textContent = obj.name;\r\n  profileDescription.textContent = obj.about;\r\n  profileImage.style.backgroundImage = `url(${obj.avatar})`;\r\n  idProfile = obj._id;\r\n}\r\n\r\n// Все функции арточки\r\nconst functionCard = {\r\n  deleteCard,\r\n  openCard,\r\n  likeCard,\r\n};\r\n\r\n// @todo: Функция вывода все карточки на страницу\r\nfunction renderCards(array) {\r\n  array.forEach((obj) => {\r\n    cardContainer.append(\r\n      createCard(obj, idProfile, functionCard, handleClickDelete)\r\n    );\r\n  });\r\n}\r\n\r\n//Вывод с сервера данных пользователя и карточки\r\n\r\nPromise.all([getProfile(), getInitialCards()])\r\n  .then(([profileObj, initialCards]) => {\r\n    renderProfile(profileObj);\r\n    renderCards(initialCards);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n// Редактирование профиля\r\n\r\nprofilEditButton.addEventListener(\"click\", () => {\r\n  openModal(editProfilePopup);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  clearValidation(formEditProfile, validationConfig);\r\n});\r\n\r\nformEditProfile.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formEditProfileButton);\r\n  changeNameJob(nameInput.value, jobInput.value)\r\n    .then((data) => {\r\n      profileTitle.textContent = data.name;\r\n      profileDescription.textContent = data.about;\r\n      closeModal(editProfilePopup);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Профиль не обновлен.\");\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formEditProfileButton);\r\n    });\r\n});\r\n\r\n//Смена аватара\r\n\r\nprofileImage.addEventListener(\"click\", () => {\r\n  openModal(changeAvatarPopup);\r\n  formChangeAvatar.reset();\r\n  clearValidation(formChangeAvatar, validationConfig);\r\n});\r\n\r\nformChangeAvatar.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formChangeAvatarButton);\r\n  changeAvatarPatch(changeAvatarUrl.value)\r\n    .then((data) => {\r\n      profileImage.style.backgroundImage = `url(${data.avatar})`;\r\n      formChangeAvatar.reset();\r\n      closeModal(changeAvatarPopup);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Аватар не обновлен.\");\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formChangeAvatarButton);\r\n    });\r\n});\r\n\r\n// Добавление новой карточки\r\n\r\nconst newCardPopup = content.querySelector(\".popup_type_new-card\"),\r\n  formNewCard = forms[\"new-place\"],\r\n  cardName = formNewCard.querySelector(\".popup__input_type_card-name\"),\r\n  cardUrl = formNewCard.querySelector(\".popup__input_type_url\"),\r\n  formNewCardButton = formNewCard.querySelector(\".popup__button\");\r\n\r\ncontent.querySelector(\".profile__add-button\").addEventListener(\"click\", () => {\r\n  openModal(newCardPopup);\r\n  formNewCard.reset();\r\n  clearValidation(formNewCard, validationConfig);\r\n});\r\n\r\nformNewCard.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formNewCardButton);\r\n  postNewCard(cardName.value, cardUrl.value)\r\n    .then((data) => {\r\n      cardContainer.prepend(\r\n        createCard(data, idProfile, functionCard, handleClickDelete)\r\n      );\r\n      closeModal(newCardPopup);\r\n      formNewCard.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Карточка не добавлена\");\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formNewCardButton);\r\n    });\r\n});\r\n\r\n//Подтверждение удаления карточки\r\n\r\nlet cardIdForDelete;\r\nlet cardElementForDelete;\r\n\r\nconst handleClickDelete = (cardId, cardElement) => {\r\n  cardIdForDelete = cardId;\r\n  cardElementForDelete = cardElement;\r\n  openModal(popupDeleteCard);\r\n};\r\n\r\nconst confirmationDeleteCard = forms[\"delete-card\"];\r\n\r\nconfirmationDeleteCard.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  deleteCardApi(cardIdForDelete)\r\n    .then(() => {\r\n      deleteCard(cardElementForDelete);\r\n      closeModal(popupDeleteCard);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Карточка не удалена\");\r\n    });\r\n});\r\n\r\n// Обработчики клика закрытия модального по крестику и по оверлею\r\n\r\nconst popups = document.querySelectorAll(\".popup\");\r\npopups.forEach((popup) => {\r\n  popup.addEventListener(\"click\", (evt) => {\r\n    if (\r\n      evt.target === evt.currentTarget ||\r\n      evt.target.classList.contains(\"popup__close\")\r\n    ) {\r\n      closeModal(popup);\r\n    }\r\n  });\r\n});\r\n\r\n//Функция загрузки Сохранение...\r\n\r\nfunction renderLoading(isLoading, buttonElement) {\r\n  if (isLoading) {\r\n    buttonElement.textContent = \"Сохранение...\";\r\n  } else {\r\n    buttonElement.textContent = \"Сохранить\";\r\n  }\r\n}\r\n"],"names":["config","baseUrl","headers","authorization","getResponseData","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","idProfile","functionCard","handleClickDelete","newCard","cloneNode","cardImage","cardDeleteButton","cardLikeButton","likeCount","idCard","_id","textContent","name","likes","length","alt","src","link","owner","addEventListener","remove","forEach","element","classList","add","openCard","likeCard","event","deleteCard","card","openModal","elem","closeEsc","closeModal","removeEventListener","key","showInputError","formElement","inputElement","errorMessage","inputErrorClass","errorClass","errorElement","id","hideInputError","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","some","validity","valid","clearValidation","obj","Array","from","querySelectorAll","inputSelector","submitButtonSelector","setEventListeners","validationConfig","formSelector","inactiveButtonClass","patternMismatch","dataset","errorPattern","validationMessage","checkInputValidity","cardContainer","forms","popupImage","imagePopup","imageCaption","changeAvatarPopup","editProfilePopup","profileTitle","profileImage","profileDescription","formChangeAvatar","changeAvatarUrl","formChangeAvatarButton","profilEditButton","formEditProfile","nameInput","jobInput","formEditProfileButton","popupDeleteCard","cardLink","cardCaption","target","contains","fetch","method","then","data","catch","err","console","log","likeCardApi","all","_ref","_ref2","profileObj","initialCards","about","style","backgroundImage","avatar","renderProfile","append","value","evt","preventDefault","renderLoading","body","JSON","stringify","finally","reset","cardIdForDelete","cardElementForDelete","newCardPopup","formNewCard","cardName","cardUrl","formNewCardButton","prepend","cardId","cardElement","isLoading","popup","currentTarget"],"sourceRoot":""}